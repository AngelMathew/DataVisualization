{"ast":null,"code":"var _jsxFileName = \"/Users/angelmathew/Desktop/reactProjects/D3JS/D3React/project/src/components/LineChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport * as d3 from \"d3\";\nimport './LineChart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LineChart = () => {\n  _s();\n\n  const d3Chart = useRef();\n  const parseDate = d3.timeParse('%Y-%m-%d');\n  useEffect(() => {\n    fetch('https://data.cityofnewyork.us/resource/tg4x-b46p.json').then(response => response.json()).then(data => {\n      // TRANSFORM DATA\n      const permit = data.filter(type => {\n        return type.eventtype === \"Shooting Permit\";\n      }); // GET ALL DATA IN AN ARRAY\n\n      const dates = [...new Set(permit.map(item => item.enteredon.slice(0, 10)))];\n      let countArray = []; // GET COUNTS ON EACH DATE\n\n      dates.map(item => {\n        let date = item;\n        console.log(dates);\n        let count = 0;\n        permit.map(val => {\n          if (val.enteredon.slice(0, 10) === date) {\n            count = count + 1;\n          }\n        });\n        countArray.push({\n          date: parseDate(date),\n          count: count\n        });\n        console.log(\"countArray\", countArray); // console.log(\"permit\",permit)\n      });\n      const margin = {\n        top: 20,\n        right: 30,\n        bottom: 30,\n        left: 30\n      };\n      const width = parseInt(d3.select('#d3demo').style('width')) - margin.left - margin.right;\n      const height = parseInt(d3.select('#d3demo').style('height')) - margin.top - margin.bottom; // SET UP CHART\n\n      const svg = d3.select(d3Chart.current) // .attr('width',width + margin.left + margin.right)\n      // .attr('height',height + height + margin.top + margin.bottom)\n      .attr(\"viewBox\", `0 0 ${width + margin.left + margin.right} ${height + margin.top + margin.bottom}`).style('background-color', '#FDEFF4').append('g').attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // X AXIS SCALE\n\n      const x = d3.scaleTime().domain(d3.extent(countArray, function (d) {\n        return d.date;\n      })).range([0, width]);\n      svg.append('g').attr('transform', 'translate(0,' + height + ')').call(d3.axisBottom(x)); // GET MAX VALUE OF COUNT\n\n      const max = d3.max(countArray, function (d) {\n        return d.count;\n      }); // Y AXIS SCALE\n\n      const y = d3.scaleLinear().domain([0, max]).range([height, 0]);\n      svg.append('g').call(d3.axisLeft(y).ticks(14)); // DRAW LINE\n\n      svg.append('path').data([countArray]).attr('fill', 'none').attr('stroke', '#524A4E').attr('stroke-width', 2).attr('d', d3.line().x(d => {\n        return x(d.date);\n      }).y(d => {\n        return y(d.count);\n      })); // ADD TITLE\n\n      svg.append('text').attr('x', width / 2).attr('y', margin.top / 5 - 10).attr('text-anchor', 'middle').attr('font-size', '16px').attr('fill', '#524A4E').text('New York City Film Permits entered in 2020 - Shooting Permit');\n      let bisect = d3.bisector(d => {\n        debugger;\n        console.log(\"D\", d);\n        return d.date;\n      }).right;\n\n      let mouseover = () => {\n        focus.style(\"opacity\", 1);\n        focusText.style(\"opacity\", 1);\n        focusText2.style(\"opacity\", 1);\n        focusLine.style(\"opacity\", 1);\n      };\n\n      let mousemove = event => {\n        // recover coordinate we need\n        let x0 = d3.pointer(event);\n        const hoveredDate = x.invert(x0[0]);\n        const passed = new Date(hoveredDate.setHours(0, 0, 0, 0));\n        let mockdata = countArray.sort(function (a, b) {\n          return a.date - b.date;\n        });\n        let i = bisect(mockdata, passed);\n        let selectedData = countArray[i];\n        focus.attr(\"cx\", x(selectedData.date)).attr(\"cy\", y(selectedData.count));\n        focusText.html(\"Date:\" + new Date(selectedData.date).toLocaleDateString()).attr(\"x\", x(selectedData.date) + 10).attr(\"y\", y(selectedData.count));\n        focusText2.html(\"Count:\" + selectedData.count).attr(\"x\", x(selectedData.date) + 10).attr(\"y\", y(selectedData.count) + 15);\n        focusLine.attr(\"x1\", x(selectedData.date)).attr(\"x2\", x(selectedData.date));\n      };\n\n      let mouseout = () => {\n        focus.style(\"opacity\", 0);\n        focusText.style(\"opacity\", 0);\n        focusText2.style(\"opacity\", 0);\n        focusLine.style(\"opacity\", 0);\n      }; // Create the text that travels along the curve of chart\n\n\n      let focusGroup = svg.append('g');\n      let focusText = focusGroup.append('text').attr(\"stroke\", \"#FF5C8D\").style(\"opacity\", 0).attr(\"text-anchor\", \"left\").attr(\"alignment-baseline\", \"middle\").attr('dy', \"0.35em\").attr('font-size', \"14px\");\n      let focusText2 = focusGroup.append('text').attr(\"stroke\", \"#FF5C8D\").style(\"opacity\", 0).attr(\"text-anchor\", \"left\").attr(\"alignment-baseline\", \"middle\").attr('dy', \"0.55em\").attr('font-size', \"14px\"); // Createa line that travels along the curve of chart\n\n      let focusLine = focusGroup.append(\"line\").attr(\"stroke\", \"#FF5C8D\").attr(\"x1\", 10).attr(\"x2\", 10).attr(\"y1\", 0).attr(\"y2\", height).style(\"opacity\", 0); // Create a rect on top of the svg area: this rectangle recovers mouse position\n\n      svg.append('rect').style(\"fill\", \"none\").style(\"pointer-events\", \"all\").attr('width', width).attr('height', height).on('mouseover', mouseover).on('mousemove', e => mousemove(e)).on('mouseout', mouseout); // Create the circle that travels along the curve of chart\n\n      let focus = svg.append('g').append('circle').style(\"fill\", \"none\").attr(\"stroke\", \"#FF5C8D\").attr('r', 6).style(\"opacity\", 0);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"d3demo\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: d3Chart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LineChart, \"UZaK9swYa4puou/ZTg3GMr5EMOQ=\");\n\n_c = LineChart;\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["/Users/angelmathew/Desktop/reactProjects/D3JS/D3React/project/src/components/LineChart.js"],"names":["React","useState","useRef","useEffect","d3","LineChart","d3Chart","parseDate","timeParse","fetch","then","response","json","data","permit","filter","type","eventtype","dates","Set","map","item","enteredon","slice","countArray","date","console","log","count","val","push","margin","top","right","bottom","left","width","parseInt","select","style","height","svg","current","attr","append","x","scaleTime","domain","extent","d","range","call","axisBottom","max","y","scaleLinear","axisLeft","ticks","line","text","bisect","bisector","mouseover","focus","focusText","focusText2","focusLine","mousemove","event","x0","pointer","hoveredDate","invert","passed","Date","setHours","mockdata","sort","a","b","i","selectedData","html","toLocaleDateString","mouseout","focusGroup","on","e"],"mappings":"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","sourcesContent":["import React, {useState,useRef, useEffect} from 'react';\nimport * as d3 from \"d3\";\nimport './LineChart.css'\n\nconst LineChart=()=>{\n    const d3Chart=useRef();\n    const parseDate = d3.timeParse('%Y-%m-%d')\n    useEffect(()=>{\n        fetch('https://data.cityofnewyork.us/resource/tg4x-b46p.json')\n        .then(response=>response.json())\n        .then(data=>\n            {\n            // TRANSFORM DATA\n            const permit=data.filter(type=>\n                {\n                    return type.eventtype===\"Shooting Permit\" \n                }\n            )\n            // GET ALL DATA IN AN ARRAY\n            const dates= [...new Set(permit.map((item)=>item.enteredon.slice(0,10)))]\n            let countArray=[]\n            \n\n            // GET COUNTS ON EACH DATE\n            dates.map((item)=>\n            {\n                let date=item;\n                console.log(dates)\n                let count=0\n                permit.map((val)=>{\n                    if(val.enteredon.slice(0,10)===date){\n                        count=count+1;\n                    }\n\n                })\n                countArray.push({date:parseDate(date),count:count})\n                console.log(\"countArray\",countArray)\n                // console.log(\"permit\",permit)\n           \n            })\n            const margin={top:20,right:30,bottom:30,left:30}\n            const width=parseInt(d3.select('#d3demo').style('width'))- margin.left - margin.right\n            const height=parseInt(d3.select('#d3demo').style('height'))-margin.top - margin.bottom\n\n            // SET UP CHART\n            const svg=d3.select(d3Chart.current)\n                        // .attr('width',width + margin.left + margin.right)\n                        // .attr('height',height + height + margin.top + margin.bottom)\n                        .attr(\"viewBox\", `0 0 ${width+margin.left +margin.right} ${height +margin.top + margin.bottom}`)\n                        .style('background-color','#FDEFF4')\n                        .append('g')\n                        .attr('transform', 'translate('+ margin.left + ',' + margin.top + ')');\n            // X AXIS SCALE\n            const x=d3.scaleTime()\n                    .domain(d3.extent(countArray,function(d){return d.date}))\n                    .range([0,width])\n            svg.append('g')\n            .attr('transform','translate(0,'+height+')')\n            .call(d3.axisBottom(x))\n\n            // GET MAX VALUE OF COUNT\n            const max=d3.max(countArray,function(d){return d.count})\n   \n            // Y AXIS SCALE\n            const y=d3.scaleLinear()\n                    .domain([0,max])\n                    .range([height,0])\n            svg.append('g')\n            .call(d3.axisLeft(y).ticks(14))\n\n            // DRAW LINE\n            svg.append('path')\n            .data([countArray])\n            .attr('fill','none')\n            .attr('stroke','#524A4E')\n            .attr('stroke-width',2)\n            .attr('d',d3.line()\n                        .x((d)=>{return x(d.date)})\n                        .y((d)=>{return y(d.count)})\n            )\n\n            // ADD TITLE\n            svg.append('text')\n\t\t\t\t\t.attr('x',(width/2))\n\t\t\t\t\t.attr('y', (margin.top/5 - 10))\n\t\t\t\t\t.attr('text-anchor', 'middle')\n\t\t\t\t\t.attr('font-size', '16px')\n\t\t\t\t\t.attr('fill','#524A4E')\n\t\t\t\t\t.text('New York City Film Permits entered in 2020 - Shooting Permit')\n\n                    let bisect = d3.bisector((d)=> { debugger;console.log(\"D\",d); return d.date }).right;\n                    let mouseover=()=> {\n                        focus.style(\"opacity\", 1)\n                        focusText.style(\"opacity\",1)\n                        focusText2.style(\"opacity\",1)\n                        focusLine.style(\"opacity\", 1)\n                      }\n        \n                    let mousemove=(event)=> {\n                        // recover coordinate we need\n                        let x0 = d3.pointer(event);\n                        const hoveredDate = x.invert(x0[0])\n                        const passed =new Date(hoveredDate.setHours(0,0,0,0));\n                        let mockdata=countArray.sort(function(a, b) { return a.date - b.date; });\n                        let i = bisect(mockdata, passed);\n                        let selectedData = countArray[i]\n                        focus\n                          .attr(\"cx\", x(selectedData.date))\n                          .attr(\"cy\", y(selectedData.count))\n                        focusText\n                          .html(\"Date:\" + new Date(selectedData.date).toLocaleDateString())\n                          .attr(\"x\", x(selectedData.date)+10)\n                          .attr(\"y\", y(selectedData.count))\n                        focusText2\n                            .html(\"Count:\" + selectedData.count)\n                            .attr(\"x\", x(selectedData.date)+10)\n                            .attr(\"y\", y(selectedData.count)+15)\n                        focusLine\n                            .attr(\"x1\", x(selectedData.date)).attr(\"x2\", x(selectedData.date))\t\n                        }\n\n                    let mouseout=()=> {\n                        focus.style(\"opacity\", 0)\n                        focusText.style(\"opacity\", 0)\n                        focusText2.style(\"opacity\", 0)\n                        focusLine.style(\"opacity\", 0)\n                    }\n\n              // Create the text that travels along the curve of chart\n                let focusGroup = svg\n                .append('g')\n                let focusText =focusGroup\n                .append('text')\n                .attr(\"stroke\", \"#FF5C8D\")\n                .style(\"opacity\", 0)\n                .attr(\"text-anchor\", \"left\")\n                .attr(\"alignment-baseline\", \"middle\")\n                .attr('dy', \"0.35em\")\n                .attr('font-size', \"14px\");\n\n\n                let focusText2 =focusGroup\n                .append('text')\n                .attr(\"stroke\", \"#FF5C8D\")\n                .style(\"opacity\", 0)\n                .attr(\"text-anchor\", \"left\")\n                .attr(\"alignment-baseline\", \"middle\")\n                .attr('dy', \"0.55em\")\n                .attr('font-size', \"14px\");\n\n            // Createa line that travels along the curve of chart\n            \n                let focusLine = focusGroup\n                .append(\"line\")\n                    .attr(\"stroke\", \"#FF5C8D\")\n                    .attr(\"x1\", 10).attr(\"x2\", 10)\n                    .attr(\"y1\", 0).attr(\"y2\", height)\n                    .style(\"opacity\", 0)\n\n            // Create a rect on top of the svg area: this rectangle recovers mouse position\n            svg\n            .append('rect')\n            .style(\"fill\", \"none\")\n            .style(\"pointer-events\", \"all\")\n            .attr('width', width)\n            .attr('height', height)\n            .on('mouseover',mouseover)\n            .on('mousemove', e=>mousemove(e))\n            .on('mouseout', mouseout);\n\n             // Create the circle that travels along the curve of chart\n            let focus = svg\n            .append('g')\n            .append('circle')\n                .style(\"fill\", \"none\")\n                .attr(\"stroke\", \"#FF5C8D\")\n                .attr('r', 6)\n                .style(\"opacity\", 0)\n            \n            }\n        )\n    })\n    return(\n        <div id=\"d3demo\">\n            <svg ref={d3Chart}>\n\n            </svg>\n        </div>\n    )\n\n}\n\nexport default LineChart;"]},"metadata":{},"sourceType":"module"}