{"ast":null,"code":"var _jsxFileName = \"/Users/angelmathew/Desktop/reactProjects/D3JS/D3React/project/src/components/LineChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport * as d3 from \"d3\";\nimport './LineChart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LineChart = () => {\n  _s();\n\n  const d3Chart = useRef();\n  useEffect(() => {\n    fetch('https://data.cityofnewyork.us/resource/tg4x-b46p.json').then(response => response.json()).then(data => {\n      const permit = data.filter(type => {\n        return type.eventtype === \"Shooting Permit\";\n      }); // console.log(permit)\n\n      const dates = [...new Set(permit.map(item => item.enteredon.slice(0, 10)))];\n      let countArray = [];\n      dates.map(item => {\n        let date = item;\n        let count = 0;\n        permit.map(val => {\n          if (val.enteredon.slice(0, 10) === date) {\n            count = count + 1;\n          }\n        });\n        countArray.push({\n          date: date,\n          count: count\n        });\n      });\n      const margin = {\n        top: 50,\n        right: 30,\n        bottom: 20,\n        left: 30\n      };\n      const width = parseInt(d3.select('#d3demo').style('width'));\n      const height = parseInt(d3.select('#d3demo').style('height'));\n      console.log(\"test\", d3.select(d3Chart.current));\n      const svg = d3.select(d3Chart.current).attr('width', width).attr('height', height).style('background-color', 'yellow').append('g').attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n      const x = d3.scaleTime().domain(d3.extent(countArray, function (d) {\n        return d.date;\n      })).range([0, width]);\n      svg.append('g').attr('transform', 'translate(0', +height + ')').call(d3.axisBottom(x));\n      const max = d3.max(countArray, function (d) {\n        return d.count;\n      });\n      const y = d3.scaleLinear().domain([0, max]).range([height, 0]);\n      svg.append('g').call(d3.axisLeft(y));\n      svg.append('path').datum(countArray).attr('fill', 'none').attr('stroke', 'white').attr('stroke-width', '3').attr('d', d3.line().x(function (d) {\n        return x(d.date);\n      })).y(function (d) {\n        return y(d.count);\n      });\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"d3demo\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: d3Chart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LineChart, \"UZaK9swYa4puou/ZTg3GMr5EMOQ=\");\n\n_c = LineChart;\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["/Users/angelmathew/Desktop/reactProjects/D3JS/D3React/project/src/components/LineChart.js"],"names":["React","useState","useRef","useEffect","d3","LineChart","d3Chart","fetch","then","response","json","data","permit","filter","type","eventtype","dates","Set","map","item","enteredon","slice","countArray","date","count","val","push","margin","top","right","bottom","left","width","parseInt","select","style","height","console","log","current","svg","attr","append","x","scaleTime","domain","extent","d","range","call","axisBottom","max","y","scaleLinear","axisLeft","datum","line"],"mappings":"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","sourcesContent":["import React, {useState,useRef, useEffect} from 'react';\nimport * as d3 from \"d3\";\nimport './LineChart.css'\n\nconst LineChart=()=>{\n    const d3Chart=useRef();\n    useEffect(()=>{\n        fetch('https://data.cityofnewyork.us/resource/tg4x-b46p.json')\n        .then(response=>response.json())\n        .then(data=>\n            {const permit=data.filter(type=>\n                {\n                    return type.eventtype===\"Shooting Permit\" \n                }\n          \n            )\n            // console.log(permit)\n            const dates= [...new Set(permit.map((item)=>item.enteredon.slice(0,10)))]\n            let countArray=[]\n            dates.map((item)=>\n            {\n                let date=item;\n                let count=0\n                permit.map((val)=>{\n                    if(val.enteredon.slice(0,10)===date){\n                        count=count+1;\n                    }\n\n                })\n                countArray.push({date:date,count:count})\n            })\n            const margin={top:50,right:30,bottom:20,left:30}\n            const width=parseInt(d3.select('#d3demo').style('width'))\n            const height=parseInt(d3.select('#d3demo').style('height'))\nconsole.log(\"test\",d3.select(d3Chart.current))\n            const svg=d3.select(d3Chart.current)\n                        .attr('width',width)\n                        .attr('height',height)\n                        .style('background-color','yellow')\n                        .append('g')\n                        .attr('transform','translate('+margin.left+','+margin.top + ')')\n            const x=d3.scaleTime()\n                    .domain(d3.extent(countArray,function(d){return d.date}))\n                    .range([0,width])\n            svg.append('g')\n            .attr('transform','translate(0',+height+')')\n            .call(d3.axisBottom(x))\n\n            const max=d3.max(countArray,function(d){return d.count})\n\n            const y=d3.scaleLinear()\n                    .domain([0,max])\n                    .range([height,0])\n            svg.append('g')\n            .call(d3.axisLeft(y))\n\n            svg.append('path')\n            .datum(countArray)\n            .attr('fill','none')\n            .attr('stroke','white')\n            .attr('stroke-width','3')\n            .attr('d',d3.line()\n                        .x(function(d){return x(d.date)}))\n                        .y(function(d){return y(d.count)})\n\n            }\n        )})\n    return(\n        <div id=\"d3demo\">\n            <svg ref={d3Chart}>\n\n            </svg>\n        </div>\n    )\n\n}\n\nexport default LineChart;"]},"metadata":{},"sourceType":"module"}