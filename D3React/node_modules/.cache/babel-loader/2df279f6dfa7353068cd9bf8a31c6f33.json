{"ast":null,"code":"var _jsxFileName = \"/Users/angelmathew/Desktop/reactProjects/D3JS/D3React/project/src/components/LineChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport * as d3 from \"d3\";\nimport './LineChart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LineChart = () => {\n  _s();\n\n  const d3Chart = useRef();\n  const parseDate = d3.timeParse('%Y-%m-%d');\n  useEffect(() => {\n    fetch('https://data.cityofnewyork.us/resource/tg4x-b46p.json').then(response => response.json()).then(data => {\n      // TRANSFORM DATA\n      const permit = data.filter(type => {\n        return type.eventtype === \"Shooting Permit\";\n      }); // GET ALL DATA IN AN ARRAY\n\n      const dates = [...new Set(permit.map(item => item.enteredon.slice(0, 10)))];\n      let countArray = []; // GET COUNTS ON EACH DATE\n\n      dates.map(item => {\n        let date = item;\n        let count = 0;\n        permit.map(val => {\n          if (val.enteredon.slice(0, 10) === date) {\n            count = count + 1;\n          }\n        });\n        countArray.push({\n          date: parseDate(date),\n          count: count\n        });\n        console.log(\"countArray\", countArray);\n        console.log(\"permit\", permit);\n      });\n      const margin = {\n        top: 20,\n        right: 30,\n        bottom: 30,\n        left: 30\n      };\n      const width = parseInt(d3.select('#d3demo').style('width')) - margin.left - margin.right;\n      const height = parseInt(d3.select('#d3demo').style('height')) - margin.top - margin.bottom; // SET UP CHART\n\n      const svg = d3.select(d3Chart.current).attr('width', width + margin.left + margin.right).attr('height', height + height + margin.top + margin.bottom).style('background-color', 'transparent').append('g').attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // X AXIS SCALE\n\n      const x = d3.scaleTime().domain(d3.extent(countArray, function (d) {\n        return d.date;\n      })).range([0, width]);\n      console.log('here', d3.extent(countArray, function (d) {\n        return d.date;\n      }));\n      svg.append('g').attr('transform', 'translate(0,' + height + ')').call(d3.axisBottom(x)); // GET MAX VALUE OF COUNT\n\n      const max = d3.max(countArray, function (d) {\n        return d.count;\n      }); // Y AXIS SCALE\n\n      const y = d3.scaleLinear().domain([0, max]).range([height, 0]);\n      console.log(y(0));\n      svg.append('g').call(d3.axisLeft(y)); // DRAW LINW\n\n      svg.append('path').data([countArray]).attr('fill', 'none').attr('stroke', 'white').attr('stroke-width', 3).attr('d', d3.line().x(d => {\n        return x(d.date);\n      }).y(d => {\n        return y(d.count);\n      })); // ADD TITLE\n\n      svg.append('text').attr('x', width / 2).attr('y', margin.top / 5 - 10).attr('text-anchor', 'middle').attr('font-size', '16px').attr('fill', 'white').text('New York City Film Permits entered in 2020 - Shooting Permit');\n      let bisect = d3.bisector(d => {\n        debugger;\n        return d.date;\n      }).left;\n\n      let mouseover = () => {\n        focus.style(\"opacity\", 1);\n        focusText.style(\"opacity\", 1);\n      };\n\n      let mousemove = event => {\n        // recover coordinate we need\n        debugger;\n        console.log(event);\n        let x0 = d3.pointer(this);\n        console.log(x0[0]);\n        const hoveredDate = x.invert(x0[0]);\n        console.log(\"X0\", new Date(hoveredDate)); // console.log(countArray)\n\n        debugger;\n        let i = bisect(countArray, hoveredDate);\n        debugger;\n        console.log(\"I\", i);\n        let selectedData = countArray[14];\n        focus.attr(\"cx\", x(selectedData.date)).attr(\"cy\", y(selectedData.count));\n        focusText.html(\"x:\" + selectedData.date + \"  -  \" + \"y:\" + selectedData.count).attr(\"x\", x(selectedData.date) + 15).attr(\"y\", y(selectedData.count));\n      };\n\n      let mouseout = () => {\n        focus.style(\"opacity\", 0);\n        focusText.style(\"opacity\", 0);\n      }; // Create the text that travels along the curve of chart\n\n\n      let focusText = svg.append('g').append('text').style(\"opacity\", 0).attr(\"text-anchor\", \"left\").attr(\"alignment-baseline\", \"middle\"); // Create a rect on top of the svg area: this rectangle recovers mouse position\n\n      svg.append('rect').style(\"fill\", \"none\").style(\"pointer-events\", \"all\").attr('width', width).attr('height', height).on('mouseover', mouseover).on('mousemove', e => mousemove(e)).on('mouseout', mouseout); // Create the circle that travels along the curve of chart\n\n      let focus = svg.append('g').append('circle').style(\"fill\", \"none\").attr(\"stroke\", \"black\").attr('r', 8.5).style(\"opacity\", 0); // This allows to find the closest X index of the mouse:\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"d3demo\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: d3Chart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LineChart, \"UZaK9swYa4puou/ZTg3GMr5EMOQ=\");\n\n_c = LineChart;\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["/Users/angelmathew/Desktop/reactProjects/D3JS/D3React/project/src/components/LineChart.js"],"names":["React","useState","useRef","useEffect","d3","LineChart","d3Chart","parseDate","timeParse","fetch","then","response","json","data","permit","filter","type","eventtype","dates","Set","map","item","enteredon","slice","countArray","date","count","val","push","console","log","margin","top","right","bottom","left","width","parseInt","select","style","height","svg","current","attr","append","x","scaleTime","domain","extent","d","range","call","axisBottom","max","y","scaleLinear","axisLeft","line","text","bisect","bisector","mouseover","focus","focusText","mousemove","event","x0","pointer","hoveredDate","invert","Date","i","selectedData","html","mouseout","on","e"],"mappings":"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","sourcesContent":["import React, {useState,useRef, useEffect} from 'react';\nimport * as d3 from \"d3\";\nimport './LineChart.css'\n\nconst LineChart=()=>{\n    const d3Chart=useRef();\n    const parseDate = d3.timeParse('%Y-%m-%d')\n    useEffect(()=>{\n        fetch('https://data.cityofnewyork.us/resource/tg4x-b46p.json')\n        .then(response=>response.json())\n        .then(data=>\n            {\n            // TRANSFORM DATA\n            const permit=data.filter(type=>\n                {\n                    return type.eventtype===\"Shooting Permit\" \n                }\n            )\n            // GET ALL DATA IN AN ARRAY\n            const dates= [...new Set(permit.map((item)=>item.enteredon.slice(0,10)))]\n            let countArray=[]\n\n            // GET COUNTS ON EACH DATE\n            dates.map((item)=>\n            {\n                let date=item;\n                let count=0\n                permit.map((val)=>{\n                    if(val.enteredon.slice(0,10)===date){\n                        count=count+1;\n                    }\n\n                })\n                countArray.push({date:parseDate(date),count:count})\n                console.log(\"countArray\",countArray)\n                console.log(\"permit\",permit)\n           \n            })\n            const margin={top:20,right:30,bottom:30,left:30}\n            const width=parseInt(d3.select('#d3demo').style('width'))- margin.left - margin.right\n            const height=parseInt(d3.select('#d3demo').style('height'))-margin.top - margin.bottom\n\n            // SET UP CHART\n            const svg=d3.select(d3Chart.current)\n                        .attr('width',width + margin.left + margin.right)\n                        .attr('height',height + height + margin.top + margin.bottom)\n                        .style('background-color','transparent')\n                        .append('g')\n                        .attr('transform', 'translate('+ margin.left + ',' + margin.top + ')');\n            // X AXIS SCALE\n            const x=d3.scaleTime()\n                    .domain(d3.extent(countArray,function(d){return d.date}))\n                    .range([0,width])\n                    console.log('here',d3.extent(countArray,function(d){return d.date}))\n            svg.append('g')\n            .attr('transform','translate(0,'+height+')')\n            .call(d3.axisBottom(x))\n\n            // GET MAX VALUE OF COUNT\n            const max=d3.max(countArray,function(d){return d.count})\n   \n            // Y AXIS SCALE\n            const y=d3.scaleLinear()\n                    .domain([0,max])\n                    .range([height,0])\n                console.log( y(0) )\n            svg.append('g')\n            .call(d3.axisLeft(y))\n\n            // DRAW LINW\n            svg.append('path')\n            .data([countArray])\n            .attr('fill','none')\n            .attr('stroke','white')\n            .attr('stroke-width',3)\n            .attr('d',d3.line()\n                        .x((d)=>{return x(d.date)})\n                        .y((d)=>{return y(d.count)})\n            )\n\n            // ADD TITLE\n            svg.append('text')\n\t\t\t\t\t.attr('x',(width/2))\n\t\t\t\t\t.attr('y', (margin.top/5 - 10))\n\t\t\t\t\t.attr('text-anchor', 'middle')\n\t\t\t\t\t.attr('font-size', '16px')\n\t\t\t\t\t.attr('fill','white')\n\t\t\t\t\t.text('New York City Film Permits entered in 2020 - Shooting Permit')\n\n                    let bisect = d3.bisector((d)=> { debugger; return d.date }).left;\n\n                    let mouseover=()=> {\n                        focus.style(\"opacity\", 1)\n                        focusText.style(\"opacity\",1)\n                      }\n        \n                    let mousemove=(event)=> {\n                        // recover coordinate we need\n                        debugger;\n                        console.log(event)\n                        let x0 = d3.pointer(this);\n                        console.log(x0[0])\n                        const hoveredDate = x.invert(x0[0])\n                        console.log(\"X0\",new Date(hoveredDate))\n                        // console.log(countArray)\n                        debugger;\n                        let i = bisect(countArray, hoveredDate);\n                        debugger;\n                        console.log(\"I\",i)\n                        let selectedData = countArray[14]\n                        focus\n                          .attr(\"cx\", x(selectedData.date))\n                          .attr(\"cy\", y(selectedData.count))\n                        focusText\n                          .html(\"x:\" + selectedData.date + \"  -  \" + \"y:\" + selectedData.count)\n                          .attr(\"x\", x(selectedData.date)+15)\n                          .attr(\"y\", y(selectedData.count))\n                        }\n                    let mouseout=()=> {\n                        focus.style(\"opacity\", 0)\n                        focusText.style(\"opacity\", 0)\n                      }\n\n              // Create the text that travels along the curve of chart\n            let focusText = svg\n            .append('g')\n            .append('text')\n                .style(\"opacity\", 0)\n                .attr(\"text-anchor\", \"left\")\n                .attr(\"alignment-baseline\", \"middle\")\n\n              // Create a rect on top of the svg area: this rectangle recovers mouse position\n            svg\n            .append('rect')\n            .style(\"fill\", \"none\")\n            .style(\"pointer-events\", \"all\")\n            .attr('width', width)\n            .attr('height', height)\n            .on('mouseover',mouseover)\n            .on('mousemove', e=>mousemove(e))\n            .on('mouseout', mouseout);\n\n             // Create the circle that travels along the curve of chart\n            let focus = svg\n            .append('g')\n            .append('circle')\n                .style(\"fill\", \"none\")\n                .attr(\"stroke\", \"black\")\n                .attr('r', 8.5)\n                .style(\"opacity\", 0)\n\n            // This allows to find the closest X index of the mouse:\n            \n            }\n        )\n    })\n    return(\n        <div id=\"d3demo\">\n            <svg ref={d3Chart}>\n\n            </svg>\n        </div>\n    )\n\n}\n\nexport default LineChart;"]},"metadata":{},"sourceType":"module"}